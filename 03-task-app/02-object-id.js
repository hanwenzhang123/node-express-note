//The Object ID 
//https://docs.mongodb.com/manual/reference/method/ObjectId/
MongoDB uses GUID - Global Unique Indenfier 
ObjectID in MongoDB is uniquely automatically generated by the database drivers unlike SQL using sequences
Benefits: the ability to scale well in a distributed system, and allows us to generate ID on our own using library
- we have multiple database servers running instead of just one, allowing us to handle heavy traffic where we have a lot of queries coming in with Mongo DB 
- there is no chance of an ID collision across those database servers with an auto incrementing integer.
- so we can have different IDs across different database server

//mongodb.js
const { MongoClient, ObjectID } = require('mongodb')    //we use 12-byte objectID for generating our own ID, for instance, using time stamp

const id = new ObjectID()       //we can generate our own kind of ID
console.log(id.getTimestamp())      //embedded the timestamp, we still use 12-byte in database
console.log(id.id.length)       //12 binary data
console.log(id.toHexString().length)    //convert to string representation, 24 due to binary data

const connectionURL = 'mongodb://127.0.0.1:27017'  
const databaseName = 'task-manager'

MongoClient.connect(connectionURL, { useNewUrlParser: true }, (error, client) => {
    if (error) {        //if error occurs
        return console.log('Unable to connect to database!')
    }

    const db = client.db(databaseName)  
    
    db.collection('users').insertOne({  
        __id: id,       //we set our own id
        name: 'Andrew',
        age: 27
     }), (error, result) => {  
         if (error) {
             return console.log('Unable to insert user')
         }

         console.log(result.ops) 
     })
})
 
